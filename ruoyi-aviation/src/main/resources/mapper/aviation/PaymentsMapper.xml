<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.aviation.mapper.PaymentsMapper">
    
    <resultMap type="Payments" id="PaymentsResult">
        <result property="paymentId"    column="payment_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="paymentMethod"    column="payment_method"    />
        <result property="paymentAmount"    column="payment_amount"    />
        <result property="paymentStatus"    column="payment_status"    />
        <result property="paymentTime"    column="payment_time"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedTime"    column="updated_time"    />
    </resultMap>

    <sql id="selectPaymentsVo">
        select payment_id, order_id, payment_method, payment_amount, payment_status, payment_time, created_time, updated_time from a_payments
    </sql>

    <select id="selectPaymentsList" parameterType="Payments" resultMap="PaymentsResult">
        <include refid="selectPaymentsVo"/>
        <where>  
            <if test="orderId != null  and orderId != ''"> and order_id = #{orderId}</if>
            <if test="paymentMethod != null  and paymentMethod != ''"> and payment_method = #{paymentMethod}</if>
            <if test="paymentAmount != null "> and payment_amount = #{paymentAmount}</if>
            <if test="paymentStatus != null  and paymentStatus != ''"> and payment_status = #{paymentStatus}</if>
            <if test="paymentTime != null "> and payment_time = #{paymentTime}</if>
        </where>
    </select>
    
    <select id="selectPaymentsByPaymentId" parameterType="Long" resultMap="PaymentsResult">
        <include refid="selectPaymentsVo"/>
        where payment_id = #{paymentId}
    </select>

    <insert id="insertPayments" parameterType="Payments">
        insert into a_payments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="paymentId != null">payment_id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="paymentMethod != null">payment_method,</if>
            <if test="paymentAmount != null">payment_amount,</if>
            <if test="paymentStatus != null">payment_status,</if>
            <if test="paymentTime != null">payment_time,</if>
            <if test="createdTime != null">created_time,</if>
            <if test="updatedTime != null">updated_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="paymentId != null">#{paymentId},</if>
            <if test="orderId != null">#{orderId},</if>
            <if test="paymentMethod != null">#{paymentMethod},</if>
            <if test="paymentAmount != null">#{paymentAmount},</if>
            <if test="paymentStatus != null">#{paymentStatus},</if>
            <if test="paymentTime != null">#{paymentTime},</if>
            <if test="createdTime != null">#{createdTime},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
         </trim>
    </insert>

    <update id="updatePayments" parameterType="Payments">
        update a_payments
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="paymentMethod != null">payment_method = #{paymentMethod},</if>
            <if test="paymentAmount != null">payment_amount = #{paymentAmount},</if>
            <if test="paymentStatus != null">payment_status = #{paymentStatus},</if>
            <if test="paymentTime != null">payment_time = #{paymentTime},</if>
            <if test="createdTime != null">created_time = #{createdTime},</if>
            <if test="updatedTime != null">updated_time = #{updatedTime},</if>
        </trim>
        where payment_id = #{paymentId}
    </update>

    <delete id="deletePaymentsByPaymentId" parameterType="Long">
        delete from a_payments where payment_id = #{paymentId}
    </delete>

    <delete id="deletePaymentsByPaymentIds" parameterType="String">
        delete from a_payments where payment_id in 
        <foreach item="paymentId" collection="array" open="(" separator="," close=")">
            #{paymentId}
        </foreach>
    </delete>
</mapper>